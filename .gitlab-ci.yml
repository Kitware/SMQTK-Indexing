stages:
  - download
  - test
  - build

# Global default parameters set for all jobs unless overridden by job-specific
# configuration.
default:
  image: python:3.9-buster
  interruptible: true

# Global default variables set for all jobs unless overridden by job-specific
# configuration.
variables:
  LC_ALL: "C.UTF-8"
  LANG: "C.UTF-8"


###############################################################################
# Run Conditions
#

# Run rules to activate at the major junction points: merge requests, tag
# pipelines and branch pipelines for masters.
.run_automatically:
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: on_success
    - if: $CI_COMMIT_TAG
      when: on_success
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never  # explicit fail-exclude terminal condition.

# Rules for running
# TODO: When moving to enforcing forky workflow, this will not be necessary.
.run_on_masters:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never


###############################################################################
# Jobs -- Acquire Deps
#
# This job is an intermediate workaround to package sharing before moving to
# github / PYPI.
#

.download_job_defaults:
  extends: .run_automatically
  stage: download
  tags:
    - linux
    - docker
  before_script:
    - mkdir local-deps
  artifacts:
    paths:
      - local-deps/*
    when: on_success

download:dep-smqtk-dataprovider:
  extends: .download_job_defaults
  script:
    # Aligned with smqtk-dataprovider's "publish:generic_latest_wheel" job
    # Custom CI Variables - SMQTK_DP_PROJECT_ID
    - |
      if [[ "$SMQTK_DP_PROJECT_ID" = "" ]]
      then
        echo "ERROR: Env var has no value => SMQTK_DP_PROJECT_ID"
        exit 1
      fi
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" ${CI_API_V4_URL}/projects/${SMQTK_DP_PROJECT_ID}/packages/generic/latest_wheel/0.0.0/smqtk-dataprovider-latest.tgz'
    - sha1sum smqtk-dataprovider-latest.tgz
    - tar xvf smqtk-dataprovider-latest.tgz -C local-deps

download:dep-smqtk-descriptors:
  extends: .download_job_defaults
  script:
    # Aligned with smqtk-descriptors' "publish:generic_latest_wheel" job
    # Custom CI Variables - SMQTK_DESCRIPTORS_PROJECT_ID
    - |
      if [[ "$SMQTK_DESCRIPTORS_PROJECT_ID" = "" ]]
      then
        echo "ERROR: Env var has no value => SMQTK_DESCRIPTORS_PROJECT_ID"
        exit 1
      fi
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" ${CI_API_V4_URL}/projects/${SMQTK_DESCRIPTORS_PROJECT_ID}/packages/generic/latest_wheel/0.0.0/smqtk-descriptors-latest.tgz'
    - sha1sum smqtk-descriptors-latest.tgz
    - tar xvf smqtk-descriptors-latest.tgz -C local-deps


###############################################################################
# Jobs -- Testing

.test_job_defaults:
  extends: .run_automatically
  stage: test
  tags:
    - linux
    - docker
    - test
  before_script:
    - python --version
    - pip install -U pip
    - pip install local-deps/*
    - pip install -r requirements.txt
                  -e .
  dependencies:
    - download:dep-smqtk-dataprovider
    - download:dep-smqtk-descriptors

.pytest_cmd: &pytest_cmd
  - pytest --cov=smqtk_indexing --cov-config=.pytest.coveragerc

test:unittests:
  extends: .test_job_defaults
  parallel:
    matrix:
      - IMAGE: [
          "python:3.6-buster",
          "python:3.7-buster",
          "python:3.8-buster",
          "python:3.9-buster"
        ]
        OPT_REQ: [
          "",
          "requirements/opt_faiss_cpu.txt",
          "requirements/opt_sklearn.txt",
        ]
  image: $IMAGE
  script:
    - |
      if [[ -f "$OPT_REQ" ]]
      then
        pip install -r "$OPT_REQ"
      fi
    - *pytest_cmd

test:lint:
  extends: .test_job_defaults
  script:
    - flake8

test:typecheck:
  extends: .test_job_defaults
  script:
    - mypy

test:docs_build:
  extends: .test_job_defaults
  script:
    - cd docs
    - make html
    - stat _build/html/index.html


###############################################################################
# Jobs -- Build

.build_job_defaults:
  stage: build
  tags:
    - linux
    - docker
    - build

build:build_wheel:
  extends:
    - .build_job_defaults
    - .run_automatically
  script:
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/*.whl
    when: on_success
